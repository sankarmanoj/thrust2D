ex_particle_CUDA_float_seq.cu - find_index_kernel()

1)	Simple 1D for_each
2)	Redundant syncthread on last line of kernel

Effective function - for_each (1D) with zip_iterator

ex_particle_CUDA_float_seq.cu - normalize_weights_kernel()

1)	1D for_each
2)	Multiple syncthreads
3)	Use of 2 shared memory variables
4)	Part of the code is written in a serial fashion (only 1 thread does all calculation)

Effective function - for_each (1D) with zip_iterator

ex_particle_CUDA_float_seq.cu - sum_kernel() 

1)	Reduction kernel
2)	Only 1st thread does all the calculation (makes no sense)

Effective function - reduce (1D)

ex_particle_CUDA_float_seq.cu - likelihood_kernel()

1)	1D for_each
2)	Some redundant syncthreads
3)	Use of shared memory

Effective function - for_each (1D) with zip_iterator